<repository lastmodified='20150422061555.330'>
  <resource id='com.atlassian.plugins.tutorial.servicedesk.servicedesk-automation-extension/1.0.0.SNAPSHOT' symbolicname='com.atlassian.plugins.tutorial.servicedesk.servicedesk-automation-extension' presentationname='servicedesk-automation-extension' uri='servicedesk-automation-extension-1.0-SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>Adds a new when, if and then rule component to JIRA Service Desk&apos;s automation feature.</description>
    <size>216338</size>
    <documentation>http://www.atlassian.com.com/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='com.atlassian.plugins.tutorial.servicedesk.servicedesk-automation-extension'/>
      <p n='presentationname' v='servicedesk-automation-extension'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.api.execution.command)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.api.execution.command;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.api.execution.context.project)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.api.execution.context.project;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.api.execution.context.user)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.api.execution.context.user;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.api.execution.message)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.api.execution.message;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.api.execution.message.helper)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.api.execution.message.helper;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.api.execution.rule)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.api.execution.rule;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.api.execution.whenhandler)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.api.execution.whenhandler;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.servicedesk.plugins.automation.spi.rulewhen.event)(version&gt;=0.0.0.__parsedVersion_osgiVersion_))' extend='false' multiple='false' optional='false'>Import package com.atlassian.servicedesk.plugins.automation.spi.rulewhen.event;version=${parsedVersion.osgiVersion}</require>
    <require name='package' filter='(&amp;(package=com.atlassian.crowd.embedded.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.crowd.embedded.api</require>
    <require name='package' filter='(&amp;(package=com.atlassian.fugue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.fugue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.event.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.event.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.changehistory))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.changehistory</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.history))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.history</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.permission))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.permission</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.project))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.project</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.security</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security.plugin))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.security.plugin</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.user</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.user.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.ofbiz.core.entity))' extend='false' multiple='false' optional='false'>Import package org.ofbiz.core.entity</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='false'>Import package org.slf4j</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype</require>
  </resource>
</repository>